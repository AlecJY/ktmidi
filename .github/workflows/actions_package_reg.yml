name: build dist

on:
  create:
    tags:

jobs:
  create-staging-repository:
    name: Create staging repository
    runs-on: ubuntu-20.04
    outputs:
      repository_id: ${{ steps.create.outputs.repository_id }}
    steps:
      - id: create
        uses: nexus-actions/create-nexus-staging-repo@v1.1
        with:
          username: ${{ secrets.OSSRH_USERNAME }}
          password: ${{ secrets.OSSRH_PASSWORD }}
          base_url: https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/
          staging_profile_id: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}
          description: created ${{ github.repository }}#${{ github.run_number }}

  build-and-upload:
    name: build on ${{ matrix.os }}
    needs: [create-staging-repository]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-latest]
    steps:
    - name: checkout
      uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: apt update
      run: |
        sudo apt-get update
    - name: set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: apt install
      run: |
        echo y | sudo apt-get install doxygen cmake ninja-build libasound2-dev
    - name: stupid NDK setup workaround for GitHub Actions
      run: sudo mkdir -p /usr/local/lib/android/sdk/ndk && sudo chmod 777 /usr/local/lib/android/sdk/ndk
    - name: setup gpg necessities
      run: sudo bash -c "echo '$GPG_KEY_CONTENTS' | base64 -d > '$SIGNING_SECRET_KEY_RING_FILE'"
      env:
        GPG_KEY_CONTENTS: ${{ secrets.GPG_KEY_CONTENTS }}
        SIGNING_SECRET_KEY_RING_FILE: ${{ secrets.SIGNING_SECRET_KEY_RING_FILE }}
    - name: rewrite build.gradle to require signing
      run: sed -i "s/signing {}/signing { sign publishing.publications }/" build.gradle
    - name: publish
      run: ./gradlew --warning-mode all dokkaHtml publish # --max-workers 1 closeAndReleaseSonatypeStagingRepository
      env:
        USERNAME: atsushieno
        GITHUB_TOKEN: ${{ secrets.MAVEN_PAT }}
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
        SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
        SIGNING_SECRET_KEY_RING_FILE: ${{ secrets.SIGNING_SECRET_KEY_RING_FILE }}
        SONATYPE_STAGING_PROFILE_ID: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}
    - name: upload artifact
      if: success()
      uses: actions/upload-artifact@v2
      with:
        name: ktmidi-artifacts
        path: |
          build/libs/*.jar
          build/outputs/aar/*.aar
    - name: deploy to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@4.1.2
      with:
        branch: gh-pages
        folder: build/dokka/html

  drop-or-release:
    needs: [create-staging-repository, build-and-upload]
    runs-on: ubuntu-20.04
    if: ${{ always() && needs.create_staging_repository.result == 'success' }}
    steps:
      - name: Discard
        if: ${{ needs.build-and-upload.result != 'success' }}
        uses: nexus-actions/drop-nexus-staging-repo@v1
        with:
          username: ${{ secrets.OSSRH_USERNAME }}
          password: ${{ secrets.OSSRH_PASSWORD }}
          base_url: https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/
          staging_repository_id: ${{ needs.create_staging_repository.outputs.repository_id }}
          description: discarded ${{ github.repository }}#${{ github.run_number }}
      - name: Release
        if: ${{ needs.build-and-upload.result == 'success' }}
        uses: nexus-actions/release-nexus-staging-repo@v1.2
        with:
          username: ${{ secrets.OSSRH_USERNAME }}
          password: ${{ secrets.OSSRH_PASSWORD }}
          base_url: https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/
          staging_repository_id: ${{ needs.create_staging_repository.outputs.repository_id }}
          description: released ${{ github.repository }}#${{ github.run_number }}
